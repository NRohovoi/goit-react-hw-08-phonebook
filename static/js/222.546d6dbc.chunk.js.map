{"version":3,"file":"static/js/222.546d6dbc.chunk.js","mappings":"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","sources":["components/Phonebook/Registration/RegistrationForm.styled.js","components/Phonebook/Registration/RegistrationForm.js","Pages/Registration.js","components/Phonebook/Contacts/PageStyled/ToPage.styled.js","../node_modules/yup-password/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin: 0 auto;\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label``;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n  width: 600px;\n  font-weight: bolder;\n  font-size: ${p => p.theme.fontSizes.l};\n  border: 1px solid;\n  border-radius: ${p => p.theme.radii.big};\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n  transition-property: background-color;\n  transition-duration: 0.25s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.text};\n    color: ${p => p.theme.colors.white};\n  }\n  ::placeholder {\n    color: ${p => p.theme.colors.text};\n  }\n`;\n\nexport const Error = styled.div``;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bolder;\n  font-size: ${p => p.theme.fontSizes.l};\n  gap: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  background-color: ${p => p.theme.colors.background};\n  color: ${p => p.theme.colors.white};\n  border: 1px solid;\n  border-radius: ${p => p.theme.radii.big};\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3),\n    -23px 0 20px -23px rgba(0, 0, 0, 0.6), 23px 0 20px -23px rgba(0, 0, 0, 0.6),\n    inset 0 0 40px rgba(0, 0, 0, 0.1);\n  transition-property: background-color;\n  transition-duration: 0.25s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.text};\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'Redux/Auth/Operations';\nimport {\n  StyledForm,\n  Label,\n  StyledInput,\n  StyledBtn,\n  Error,\n} from './RegistrationForm.styled';\n\nimport * as yup from 'yup';\nimport YupPassword from 'yup-password';\nYupPassword(yup);\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email(),\n  password: yup\n    .string()\n    .required()\n    .minLowercase()\n    .minUppercase()\n    .minNumbers()\n    .minSymbols()\n    .min(5),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(register(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <StyledForm autoComplete=\"off\">\n        <Label>\n          Name\n          <StyledInput type=\"text\" name=\"name\" placeholder=\"Enter your name \" />\n          <ErrorMessage name=\"name\">{msg => <Error>{msg}</Error>}</ErrorMessage>\n        </Label>\n\n        <Label>\n          Email\n          <StyledInput\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email \"\n            title=\"Invalid email address\"\n          />\n          <ErrorMessage name=\"email\">\n            {msg => <Error>{msg}</Error>}\n          </ErrorMessage>\n        </Label>\n\n        <Label>\n          Password\n          <StyledInput\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password \"\n            title=\"The length of the password is at least 8. The password must contain at least 1 uppercase letter, 1 lowercase letter, 1 symbol, 1 number\"\n          />\n          <ErrorMessage name=\"password\">\n            {() => (\n              <Error>\n                {\n                  'The length of the password is at least 8. The password must contain at least 1 uppercase letter, 1 lowercase letter, 1 symbol, 1 number'\n                }\n              </Error>\n            )}\n          </ErrorMessage>\n        </Label>\n\n        <StyledBtn type=\"submit\">Registration</StyledBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/Phonebook/Registration/RegistrationForm';\nimport { Title } from 'components/Phonebook/Contacts/PageStyled/ToPage.styled';\n\nconst Registration = () => {\n  return (\n    <main>\n      <Title>Registration form</Title>\n      <RegistrationForm />\n    </main>\n  );\n};\n\nexport default Registration;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n","'use strict'\n\n// pluralize\nconst p = function (word, num) {\n    return num === 1 ? word : `${word}s`\n}\n\nconst isNullOrUndefined = function (value) {\n    return value === null || value === undefined\n}\n\nfunction minLowercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} lowercase ' + p('letter', length)\n    return this.test({\n        name: 'minLowercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[a-z]/g) || []).length >= length\n        }\n    })\n} // minLowercase()\n\nfunction minUppercase(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} uppercase ' + p('letter', length)\n    return this.test({\n        name: 'minUppercase',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[A-Z]/g) || []).length >= length\n        }\n    })\n} // minUppercase()\n\nfunction minNumbers(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('number', length)\n    return this.test({\n        name: 'minNumber',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[0-9]/g) || []).length >= length\n        }\n    })\n} // minNumber()\n\nfunction minSymbols(length = 1, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('symbol', length)\n    return this.test({\n        name: 'minSymbol',\n        exclusive: true,\n        message: msg,\n        params: { length },\n        test(value) {\n            return isNullOrUndefined(value) || (value.match(/[^a-zA-Z0-9\\s]/g) || []).length >= length\n        }\n    })\n} // minSymbol()\n\nfunction minRepeating(length = 2, message) {\n    const msg = message || '${path} must not contain sequences of more than ${length} repeated ' + p('character', length)\n    return this.test({\n        name: 'minRepeating',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || ! new RegExp(`(.)\\\\1{${length},}`).test(value)\n        }\n    })\n} // minRepeating()\n\nfunction minWords(length = 2, message) {\n    const msg = message || '${path} must contain at least ${length} ' + p('word', length)\n    const rx = new RegExp('[a-zA-Z0-9]')\n    return this.test({\n        name: 'minWords',\n        exclusive: true,\n        message: msg,\n        params: { length: length },\n        test(value) {\n            return isNullOrUndefined(value) || value.split(' ').filter(v => !! v && rx.test(v)).length >= length\n        }\n    })\n} // minWords()\n\nfunction password() {\n    return this\n        .min(8)\n        .max(250)\n        .minLowercase(1)\n        .minUppercase(1)\n        .minNumbers(1)\n        .minSymbols(1)\n} // password()\n\nfunction setup(yup) {\n    yup.addMethod(yup.string, 'minLowercase', minLowercase)\n    yup.addMethod(yup.string, 'minUppercase', minUppercase)\n    yup.addMethod(yup.string, 'minNumber', minNumbers)\n    yup.addMethod(yup.string, 'minNumbers', minNumbers)\n    yup.addMethod(yup.string, 'minSymbol', minSymbols)\n    yup.addMethod(yup.string, 'minSymbols', minSymbols)\n    yup.addMethod(yup.string, 'minRepeating', minRepeating)\n    yup.addMethod(yup.string, 'minWords', minWords)\n    yup.addMethod(yup.string, 'password', password)\n}\n\nmodule.exports = setup\n"],"names":["StyledForm","styled","Form","Label","StyledInput","Field","p","theme","fontSizes","l","radii","big","space","colors","text","white","Error","StyledBtn","background","YupPassword","yup","schema","shape","name","required","email","password","minLowercase","minUppercase","minNumbers","minSymbols","min","initialValues","dispatch","useDispatch","onSubmit","value","resetForm","register","validationSchema","autoComplete","type","placeholder","msg","title","Title","word","num","isNullOrUndefined","undefined","length","message","this","test","exclusive","params","match","minRepeating","RegExp","minWords","rx","split","filter","v","max","module","exports","addMethod","string"],"sourceRoot":""}